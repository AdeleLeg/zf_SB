# Title: Swimming burst analysis in zebrafish larvae
# Author: Adele Leggieri

#To analyse the response and habituation to acoustic startle, we need the following libraries:

library(plyr)
library(ggplot2)
library(Hmisc)
library(lme4)
library(car)
library(betareg)
library(emmeans)
library("readxl")
library(dplyr)
library(tidyr)

#Read out the data
data = read_excel(file.choose())

#Create fish.ID column
data <- data %>%
  unite("fish.ID", Trial:Well, sep = " ", remove = FALSE)

#Create time column
# The number on the left (x) in seq(x,y) is the interval on the repetition you want in your time columns, in our case we want every second, so it'll be 1.
# The number on the right (y), is the duration of the experiments expressed in the measure unit (469 seconds in this case).
# Length.out = number of the rows of your data file, aka the number of observations in global environment (top right corner, 112560 in this case).
data$Time <- rep(seq(1,469),length.out=112560)

#See the structure of the data
str(data)

#Change the structure of the data
data$fish.ID= as.factor(data$fish.ID)
data$Genotype = as.factor(data$Genotype)
data$Mean = as.numeric(data$Mean)
data$Time = as.numeric(data$Time)
data$Total = as.numeric(data$Total)


#Subset the dataset according to how many animals you want to analyse. Swimming burst take into account the burst of every single fish x condition. Below I am analysing 5 fish x condition (e.g, WT and HOM)

HOM <- subset(data, fish.ID == "Trial     2 D1" | fish.ID == "Trial     2 D2" | fish.ID == "Trial     2 D6" | 
         fish.ID == "Trial     2 D4" | fish.ID == "Trial     2 D5")

WT <- subset(data, fish.ID == "Trial     2 A1" | fish.ID == "Trial     2 A2" | fish.ID == "Trial     2 A3" | 
                fish.ID == "Trial     2 A4" | fish.ID == "Trial     2 A5")

#Merge the genotypes
all <- rbind (HOM, WT)


#Subset the first 90sec (as per Lange et al., 2012)
ninetysec <- subset (all, Time > 40 & Time < 131)


#Take distance travelled every 3seconds

three.second <- ninetysec %>%
  mutate(Time.3s = floor(Time / 3)) %>%
  group_by(fish.ID, Concentration, Genotype, Time.3s) %>%
  summarize(
    Mean = sum(Mean),
    SD = sum(SD),
    Total = sum(Total),
    Mean.Velocity = mean(Velocity))


#Plot Genotypes <- list('WT'= "WT",'HOM'= "HOM")
genotypes_labeller <- function(variable,value){return(Genotypes[value])}
three.second$Genotype_f = factor(three.second$Genotype, levels=c('WT','HOM'))


ggplot (three.second, #name of the dataset
        aes(x=Time.3s,
            y=Mean*100,
            group=Genotype, 
            colour=Genotype)) + 
  stat_summary(fun="mean", geom="line", size = 1.0) + 
  stat_summary(fun.data = "mean_cl_normal", 
               fun.args = list(mult = 1)) + 
  xlab("Time (sec)") + ylab("Distance travelled (mm)") + 
  ggtitle("") +
  theme(text = element_text(size=15), 
        panel.background = element_blank(), 
        panel.grid.minor = element_blank(), 
        panel.border = element_rect(colour = "grey", fill=NA, size=0.5),
        axis.line = element_line(colour = "grey")) +
  theme(axis.title.y = element_text(face = "bold"),
        axis.title.x = element_text(face = "bold"),
        axis.text.x = element_text(angle = 55, size = 10, vjust=1, hjust=1))+
  scale_color_manual(values = c("lightskyblue", "hotpink3", "green3"))+
  #facet_grid(genotype  ~ fish.ID)
  facet_grid( ~ Genotype_f, labeller = genotypes_labeller)+
  facet_wrap(~ fish.ID)

#calculate N of peaks Peaks were defined as all acceleration events when the fish
#traveled > 5mm in < 12 s.

# Now create the function find_peaks to find the peaks as defined above

# to call the function: find_peaks(v,t) 

find_peaks <- function(v,t){
  p <- embed(sign(diff(v)),2)
  # find the indexes of both the max and min
  idx <- which(rowSums(p) == 0) + 1
  # find only the local max (high peaks)
  loc_max_i <- which(diff( sign(diff(v)) ) == -2 )+1
  # find only the local min (low peaks)
  loc_min_i <- which(diff( sign(diff(v)) ) == +2 )+1
  peaks <- c()
  for (i in seq(1,length(loc_max_i))) {
    if(v[loc_max_i[i]] > 5 & (t[loc_max_i[i]] - t[loc_min_i[i]] < 4 ) )
    {
      peaks[length(peaks)+1] = loc_max_i[i]
    }
  }
  return(peaks)
}

#Example of peaks calculation for 1xHOM larva
HOM1 <- subset (three.second,fish.ID == "Trial     2 D1")

##First of all check that the Mean distance travelled (Mean below) column is the right measurment unit. That is why I multiply *1000 the Mean below

v <- HOM1$Mean*1000
t <- HOM1$Time.3s
peaks <- find_peaks(v,t)
# peaks contains the indexes where the peaks are. To see the number of peaks, do length(peaks)
length(peaks)
