# Title: Swimming burst analysis in zebrafish larvae
# Author: Adele Leggieri

#To analyse the response and habituation to acoustic startle, we need the following libraries:

library(plyr)
library(ggplot2)
library(Hmisc)
library(lme4)
library(car)
library(betareg)
library(emmeans)
library("readxl")
library(dplyr)
library(tidyr)

#Read out the data
data = read_excel(file.choose())

#Create fish.ID column
data <- data %>%
  unite("fish.ID", Trial:Well, sep = " ", remove = FALSE)

#Create time column
data$Time <- rep(seq(1,469),length.out=112560)

#See the structure of the data
str(data)

#Change the structure of the data
data$fish.ID= as.factor(data$fish.ID)
data$Genotype = as.factor(data$Genotype)
data$Mean = as.numeric(data$Mean)
data$Time = as.numeric(data$Time)
data$Total = as.numeric(data$Total)


#Subset the dataset according to how many animals you want to analyse. Swimming burst take into account the burst of every single fish x condition. Below I am analysing 5 fish x condition (e.g, WT and HOM)

HOM <- subset(data, fish.ID == "Trial     2 D1" | fish.ID == "Trial     2 D2" | fish.ID == "Trial     2 D6" | 
         fish.ID == "Trial     2 D4" | fish.ID == "Trial     2 D5")

WT <- subset(data, fish.ID == "Trial     2 A1" | fish.ID == "Trial     2 A2" | fish.ID == "Trial     2 A3" | 
                fish.ID == "Trial     2 A4" | fish.ID == "Trial     2 A5")

#Merge the genotypes
all <- rbind (HOM, WT)


#Subset the first 90sec (as per Lange et al., 2012)
ninetysec <- subset (all, Time > 40 & Time < 131)


#Take distance travelled every 3seconds
all.2 <- data3 %>%
  mutate(Time.3s = floor(Time / 3)) %>%
  group_by(Trial, Well, Concentration, Genotype, Time.3s) %>%
  summarize(
    Mean = sum(Mean),
    SD = sum(SD),
    Total = sum(Total),
    Mean.Velocity = mean(Mean.Velocity),
  )

#Plot all2

Genotypes <- list('WT'= "WT",'HOM'= "HOM")
genotypes_labeller <- function(variable,value){return(Genotypes[value])}
all2$Genotype_f = factor(all2$genotype, levels=c('WT','HOM'))


ggplot (all2, #name of the dataset
        aes(x=Time,
            y=Mean*100,
            group=Genotype, 
            colour=Genotype)) + 
  stat_summary(fun="mean", geom="line", size = 1.0) + 
  stat_summary(fun.data = "mean_cl_normal", 
               fun.args = list(mult = 1)) + 
  xlab("Time (sec)") + ylab("Distance travelled (mm)") + 
  ggtitle("") +
  theme(text = element_text(size=15), 
        panel.background = element_blank(), 
        panel.grid.minor = element_blank(), 
        panel.border = element_rect(colour = "grey", fill=NA, size=0.5),
        axis.line = element_line(colour = "grey")) +
  theme(axis.title.y = element_text(face = "bold"),
        axis.title.x = element_text(face = "bold"),
        axis.text.x = element_text(angle = 55, size = 10, vjust=1, hjust=1))+
  scale_color_manual(values = c("lightskyblue", "hotpink3", "green3"))+
  #facet_grid(genotype  ~ fish.ID)
  facet_grid( ~ Genotype_f, labeller = genotypes_labeller)+
  facet_wrap(~ fish.ID)

#Calculate the number of peaks peaks - defined as all acceleration events when the fish travelled > 5mm in < 12 s.
#First, create the function find_peaks to find the peaks as defined above

find_peaks <- function(v,t){
  p <- embed(sign(diff(v)),2)
  # find the indexes of both the max and min
  idx <- which(rowSums(p) == 0) + 1
  # find only the local max (high peaks)
  loc_max_i <- which(diff( sign(diff(v)) ) == -2 )+1
  # find only the local min (low peaks)
  loc_min_i <- which(diff( sign(diff(v)) ) == +2 )+1
  peaks <- c()
  for (i in seq(1,length(loc_max_i))) {
    if(v[loc_max_i[i]] > 5 & (t[loc_max_i[i]] - t[loc_min_i[i]] < 12 ) )
    {
      peaks[length(peaks)+1] = loc_max_i[i]
    }
  }
  return(peaks)
}


#Calculate peaks for WT

WT1 <- subset (all2,fish.ID == "Trial     2 A1")
WT2 <- subset (all2,fish.ID == "Trial     2 A2")
WT3 <- subset (all2,fish.ID == "Trial     2 A3")
WT4 <- subset (all2,fish.ID == "Trial     2 A4")
WT5 <- subset (all2,fish.ID == "Trial     2 A5")

v <- WT1$Mean
t <- WT1$Time
peaks <- find_peaks(v,t)
peaks


v <- WT2$Mean
t <- WT2$Time
peaks <- find_peaks(v,t)
peaks

v <- WT3$Mean
t <- WT3$Time
peaks <- find_peaks(v,t)
peaks

v <- WT4$Mean
t <- WT4$Time
peaks <- find_peaks(v,t)
peaks

v <- WT5$Mean
t <- WT5$Time
peaks <- find_peaks(v,t)
peaks


#Calculate peaks for HOM

HOM1 <- subset (all2,fish.ID == "Trial     2 D1")
HOM2 <- subset (all2,fish.ID == "Trial     2 D2")
HOM3 <- subset (all2,fish.ID == "Trial     2 D4")
HOM4 <- subset (all2,fish.ID == "Trial     2 D5")
HOM5 <- subset (all2,fish.ID == "Trial     2 D6")


v <- HOM1$Mean
t <- HOM1$Time
peaks <- find_peaks(v,t)
peaks

v <- HOM2$Mean
t <- HOM2$Time
peaks <- find_peaks(v,t)
peaks

v <- HOM3$Mean
t <- HOM3$Time
peaks <- find_peaks(v,t)
peaks

v <- HOM4$Mean
t <- HOM4$Time
peaks <- find_peaks(v,t)
peaks

v <- HOM5$Mean
t <- HOM5$Time
peaks <- find_peaks(v,t)
peaks


